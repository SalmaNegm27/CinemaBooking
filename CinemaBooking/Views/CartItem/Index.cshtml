@model List<CartItem>

<h2>Shopping Cart</h2>

@*@if (Model.Count() == 0)
{
    <p>Your cart is empty.</p>
}
else
{*@
<table class="table">
    <thead>
        <tr>
            <th>#</th>
            <th>Movie</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td></td>
                <td>@item.MovieName</td>
                <td>@item.Price</td>
                <td>
                    <form method="post" action="/CartItem/UpdateQuantity">
                        <input type="hidden" name="itemId" value="@item.ID" />
                        <input type="number" name="amount" value="@item.Amount" min="1" max="20" onchange="updateTotal(this, @item.Price)" />
                    </form>
                </td>
                <td>
                    @item.Total
                </td>
                <td>
                    <form method="post" asp-action="RemoveFromCart">
                        <input type="hidden" name="cartItemId" value="@item.ID" />
                        <button type="submit" class="btn btn-link">Remove</button>
                    </form>
                </td>
            </tr>

        }
    </tbody>
</table>

<p>Total: @Model.Sum(i => i.Total)</p>

<div class="d-flex justify-content-start">

    <form method="post">
        <button type="submit" class="btn btn-primary" asp-action="Checkout">Checkout</button>
    </form>
</div>
<div class="d-flex justify-content-end">
    <a class="btn btn-primary" asp-controller="Movie" asp-action="Index">Add More Item</a>
</div>

<script>
    function updateTotal(input, price) {
        var quantity = parseInt(input.value);
        var total = quantity * price;
        var totalCell = input.parentNode.nextElementSibling; // Get the corresponding total cell
        totalCell.textContent = total.toFixed(2); // Update the total value
    }
</script>